#!/bin/sh
set -eo pipefail

touch /tmp/init

MYSQLD_OPTS="--user=mysql"
MYSQLD_OPTS="${MYSQLD_OPTS} --skip-name-resolve"
MYSQLD_OPTS="${MYSQLD_OPTS} --skip-host-cache"
MYSQLD_OPTS="${MYSQLD_OPTS} --skip-slave-start"
MYSQLD_OPTS="${MYSQLD_OPTS} --debug-gdb"

if [ -z "$(ls -A /var/lib/mysql/)" ] || [ -z "$(ls -A /var/lib/mysql/mysql/)" ] && [ -z "$(ls -A /var/lib/mysql/ib*)" ]; then
    [[ -n "${MYSQL_ROOT_PASSWORD}" ]] \
    && echo "set password for 'root'@'%' = PASSWORD('${MYSQL_ROOT_PASSWORD}');set password for 'root'@'localhost' = PASSWORD('${MYSQL_ROOT_PASSWORD}');" >> /tmp/init

    INSTALL_OPTS="--user=mysql"
    INSTALL_OPTS="${INSTALL_OPTS} --cross-bootstrap"
    INSTALL_OPTS="${INSTALL_OPTS} --rpm"
    INSTALL_OPTS="${INSTALL_OPTS} --auth-root-authentication-method=normal"
    INSTALL_OPTS="${INSTALL_OPTS} --skip-test-db"
    INSTALL_OPTS="${INSTALL_OPTS} --datadir=/var/lib/mysql"

    /usr/bin/mysql_install_db ${INSTALL_OPTS}

    [[ -n "${MYSQL_DATABASE}" ]] && echo "create database if not exists \`${MYSQL_DATABASE}\` character set utf8 collate utf8_general_ci; " >> /tmp/init \

    if [ -n "${MYSQL_USER}" -a -n "${MYSQL_DATABASE}" ]; then
        echo "grant all on \`${MYSQL_DATABASE}\`.* to '${MYSQL_USER}'@'%' identified by '${MYSQL_PASSWORD}'; " >> /tmp/init
    fi
    
    if [ "$(ls -A /docker-entrypoint-initdb.d 2> /dev/null)" ]; then
        echo "flush privileges;" >> /tmp/init

        echo "init: Running daemon to create database"
        cat /tmp/init
        SOCKET="/run/mysqld/mysql.sock"
        MYSQL_CMD="mysql --protocol=socket -u root -h localhost --socket=${SOCKET}"
        mysqld --user=mysql --skip-networking --socket=${SOCKET} --init-file=/tmp/init &> /dev/null &
        PID="$!"

        sleep 1

        echo "init: updating system tables"
        eval ${MYSQL_CMD} < /tmp/init

        MYSQL_CMD="${MYSQL_CMD} ${MYSQL_DATABASE} "
    
        for f in /docker-entrypoint-initdb.d/*; do
            case "${f}" in
                *.sh)     echo "init: executing ${f}"; . "${f}" ;;
                *.sql)    echo "init: adding ${f}"; eval ${MYSQL_CMD} < "$f" ;;
                *.sql.gz) echo "init: adding ${f}"; gunzip -c "$f" | eval ${MYSQL_CMD} ;;
                *)        echo "init: ignoring ${f}: not a recognized format" ;;
            esac
        done

        kill -s TERM "${PID}"
        echo "init: Change ownership of data"
        chown -R mysql:mysql /var/lib/mysql
    else
        MYSQLD_OPTS="${MYSQLD_OPTS} --init-file=/tmp/init"
    fi
fi

/usr/bin/mysqld ${MYSQLD_OPTS}